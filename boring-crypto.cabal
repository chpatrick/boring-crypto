name:                boring-crypto
version:             0.1.0.0
synopsis:            The dull crypto library
description:         See README.md
license:             MIT
license-file:        LICENSE
author:              Patrick Chilton
maintainer:          chpatrick@gmail.com
copyright:           Copyright (c) 2017 Patrick Chilton
category:            Cryptography
build-type:          Simple
cabal-version:       >=1.10

library
  exposed-modules:     Crypto.Boring.Digest
                       Crypto.Boring.Exception
                       Crypto.Boring.Symmetric
                       Crypto.Boring.Random
  other-modules:       Crypto.Boring.Internal.Context
                       Crypto.Boring.Internal.Prelude
                       Crypto.Boring.Internal.Util
  build-depends:       base >=4.9 && <4.11,
                       conduit,
                       inline-c >= 0.6.0.5,
                       bytestring,
                       containers,
                       resourcet,
                       tagged,
                       safe-exceptions,
                       template-haskell
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -O
  default-extensions:  TemplateHaskell
                       FlexibleContexts
                       OverloadedStrings
                       QuasiQuotes
                       ScopedTypeVariables
                       TypeApplications
                       KindSignatures
                       DataKinds
                       LambdaCase
                       RankNTypes
  include-dirs: cbits/src/include
  -- options from https://boringssl.googlesource.com/boringssl/+/master-with-bazel/BUILD
  cc-options:
    -O2
    -D_XOPEN_SOURCE=700
    -Wall
    -Werror
    -Wformat=2
    -Wsign-compare
    -Wmissing-field-initializers
    -Wwrite-strings
    -Wshadow
    -fno-common
    -std=c11
    -Wmissing-prototypes
    -Wold-style-definition
    -Wstrict-prototypes
    -pthread
  extra-libraries:
    pthread
  if os(windows)
    cc-options: -DWIN32_LEAN_AND_MEAN -DOPENSSL_NO_ASM

  c-sources:
    cbits/err_data.c
    cbits/src/crypto/cpu-aarch64-linux.c
    cbits/src/crypto/cpu-arm-linux.c
    cbits/src/crypto/cpu-arm.c
    cbits/src/crypto/cpu-intel.c
    cbits/src/crypto/cpu-ppc64le.c
    cbits/src/crypto/crypto.c
    cbits/src/crypto/engine/engine.c
    cbits/src/crypto/err/err.c
    cbits/src/crypto/ex_data.c
    cbits/src/crypto/fipsmodule/bcm.c
    cbits/src/crypto/mem.c
    cbits/src/crypto/rand_extra/deterministic.c
    cbits/src/crypto/rand_extra/forkunsafe.c
    cbits/src/crypto/rand_extra/fuchsia.c
    cbits/src/crypto/rand_extra/rand_extra.c
    cbits/src/crypto/rand_extra/windows.c
    cbits/src/crypto/refcount_c11.c
    cbits/src/crypto/refcount_lock.c
    cbits/src/crypto/stack/stack.c
    cbits/src/crypto/thread_none.c
    cbits/src/crypto/thread_pthread.c
    cbits/src/crypto/thread_win.c
  if os(linux) && arch(aarch64)
    c-sources:
      cbits/linux-aarch64/crypto/chacha/chacha-armv8.S
      cbits/linux-aarch64/crypto/fipsmodule/aesv8-armx64.S
      cbits/linux-aarch64/crypto/fipsmodule/armv8-mont.S
      cbits/linux-aarch64/crypto/fipsmodule/ghashv8-armx64.S
      cbits/linux-aarch64/crypto/fipsmodule/sha1-armv8.S
      cbits/linux-aarch64/crypto/fipsmodule/sha256-armv8.S
      cbits/linux-aarch64/crypto/fipsmodule/sha512-armv8.S
  if os(linux) && arch(arm)
    c-sources:
      cbits/linux-arm/crypto/chacha/chacha-armv4.S
      cbits/linux-arm/crypto/fipsmodule/aes-armv4.S
      cbits/linux-arm/crypto/fipsmodule/aesv8-armx32.S
      cbits/linux-arm/crypto/fipsmodule/armv4-mont.S
      cbits/linux-arm/crypto/fipsmodule/bsaes-armv7.S
      cbits/linux-arm/crypto/fipsmodule/ghash-armv4.S
      cbits/linux-arm/crypto/fipsmodule/ghashv8-armx32.S
      cbits/linux-arm/crypto/fipsmodule/sha1-armv4-large.S
      cbits/linux-arm/crypto/fipsmodule/sha256-armv4.S
      cbits/linux-arm/crypto/fipsmodule/sha512-armv4.S
      cbits/src/crypto/curve25519/asm/x25519-asm-arm.S
      cbits/src/crypto/poly1305/poly1305_arm_asm.S
  if os(linux) && arch(ppc64le)
    c-sources:
      cbits/linux-ppc64le/crypto/fipsmodule/aesp8-ppc.S
      cbits/linux-ppc64le/crypto/fipsmodule/ghashp8-ppc.S
  if os(linux) && arch(x86)
    c-sources:
      cbits/linux-x86/crypto/chacha/chacha-x86.S
      cbits/linux-x86/crypto/fipsmodule/aes-586.S
      cbits/linux-x86/crypto/fipsmodule/aesni-x86.S
      cbits/linux-x86/crypto/fipsmodule/bn-586.S
      cbits/linux-x86/crypto/fipsmodule/co-586.S
      cbits/linux-x86/crypto/fipsmodule/ghash-x86.S
      cbits/linux-x86/crypto/fipsmodule/md5-586.S
      cbits/linux-x86/crypto/fipsmodule/sha1-586.S
      cbits/linux-x86/crypto/fipsmodule/sha256-586.S
      cbits/linux-x86/crypto/fipsmodule/sha512-586.S
      cbits/linux-x86/crypto/fipsmodule/vpaes-x86.S
      cbits/linux-x86/crypto/fipsmodule/x86-mont.S
  if os(linux) && arch(x86_64)
    c-sources:
      cbits/linux-x86_64/crypto/chacha/chacha-x86_64.S
      cbits/linux-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.S
      cbits/linux-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/aes-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/aesni-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/bsaes-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/ghash-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/md5-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/p256-x86_64-asm.S
      cbits/linux-x86_64/crypto/fipsmodule/rdrand-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/rsaz-avx2.S
      cbits/linux-x86_64/crypto/fipsmodule/sha1-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/sha256-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/sha512-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/vpaes-x86_64.S
      cbits/linux-x86_64/crypto/fipsmodule/x86_64-mont.S
      cbits/linux-x86_64/crypto/fipsmodule/x86_64-mont5.S
      cbits/src/crypto/curve25519/asm/x25519-asm-x86_64.S
  if os(darwin) && arch(x86)
    c-sources:
      cbits/mac-x86/crypto/chacha/chacha-x86.S
      cbits/mac-x86/crypto/fipsmodule/aes-586.S
      cbits/mac-x86/crypto/fipsmodule/aesni-x86.S
      cbits/mac-x86/crypto/fipsmodule/bn-586.S
      cbits/mac-x86/crypto/fipsmodule/co-586.S
      cbits/mac-x86/crypto/fipsmodule/ghash-x86.S
      cbits/mac-x86/crypto/fipsmodule/md5-586.S
      cbits/mac-x86/crypto/fipsmodule/sha1-586.S
      cbits/mac-x86/crypto/fipsmodule/sha256-586.S
      cbits/mac-x86/crypto/fipsmodule/sha512-586.S
      cbits/mac-x86/crypto/fipsmodule/vpaes-x86.S
      cbits/mac-x86/crypto/fipsmodule/x86-mont.S
  if os(darwin) && arch(x86_64)
    c-sources:
      cbits/mac-x86_64/crypto/chacha/chacha-x86_64.S
      cbits/mac-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.S
      cbits/mac-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/aes-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/aesni-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/bsaes-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/ghash-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/md5-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/p256-x86_64-asm.S
      cbits/mac-x86_64/crypto/fipsmodule/rdrand-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/rsaz-avx2.S
      cbits/mac-x86_64/crypto/fipsmodule/sha1-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/sha256-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/sha512-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/vpaes-x86_64.S
      cbits/mac-x86_64/crypto/fipsmodule/x86_64-mont.S
      cbits/mac-x86_64/crypto/fipsmodule/x86_64-mont5.S
      cbits/src/crypto/curve25519/asm/x25519-asm-x86_64.S

test-suite boring-crypto-tests
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             tests.hs
  ghc-options:         -Wall -O2
  other-modules:       Crypto.Boring.Test.Symmetric
                       Crypto.Boring.Test.Random
                       Crypto.Boring.Test.TestVectors
                       Crypto.Boring.Test.Digest
  default-language:    Haskell2010
  build-depends:       base,
                       boring-crypto,
                       tasty,
                       QuickCheck,
                       tasty-quickcheck,
                       tasty-hunit,
                       bytestring,
                       tagged,
                       conduit,
                       megaparsec,
                       path
  default-extensions:  TemplateHaskell
                       FlexibleContexts
                       OverloadedStrings
                       QuasiQuotes
                       ScopedTypeVariables
                       TypeApplications
                       KindSignatures
                       DataKinds
                       LambdaCase
                       TypeFamilies
                       MultiWayIf

-- executable update-cbits
--   main-is:             update-cbits.hs
--   default-language:    Haskell2010
--   build-depends:       base,
--                        path,
--                        path-io,
--                        unix,
--                        process,
--                        megaparsec,
--                        bytestring
--   ghc-options:         -Wall
